{"comment":"/**\n * This file is a schema that defines the jsonddl schema.\n * \u003cp\u003e\n * The var declaration at the top isn\u0027t actually important to the parser, but it\n * does make the schema a valid JavaScript program.\n */","models":{"EnumValue":{"name":"EnumValue","properties":[{"name":"comment","type":{"kind":"STRING"}},{"name":"name","type":{"kind":"STRING"}}]},"Kind":{"comment":"/**\n   * This is a simplified type system, representing only the types of data that\n   * can be directly expressed in JSON.\n   */","enumValues":[{"name":"BOOLEAN"},{"name":"DDL"},{"name":"DOUBLE"},{"name":"ENUM"},{"name":"EXTERNAL"},{"name":"INTEGER"},{"name":"LIST"},{"name":"MAP"},{"name":"STRING"}],"name":"Kind"},"Model":{"comment":"/**\n   * A model represents a single kind of object within the schema. There is a\n   * 1:1 correspondence between Models and Java classes or JS type closures.\n   */","name":"Model","properties":[{"name":"comment","type":{"kind":"STRING"}},{"name":"enumValues","type":{"kind":"LIST","listElement":{"name":"EnumValue","kind":"DDL"}}},{"name":"name","type":{"kind":"STRING"}},{"name":"properties","type":{"kind":"LIST","listElement":{"name":"Property","kind":"DDL"}}}]},"Property":{"comment":"/**\n   * A property is a pair of a name and a type.\n   */","name":"Property","properties":[{"comment":"/**\n     * This comment will be stored in this property.\n     */","name":"comment","type":{"kind":"STRING"}},{"name":"name","type":{"kind":"STRING"}},{"name":"type","type":{"name":"Type","kind":"DDL"}}]},"Schema":{"comment":"/**\n   * A Schema is the top-level object that encapsulates the normalized form of a\n   * json-ddl schema.\n   */","name":"Schema","properties":[{"comment":"/**\n     * General information about the schema itself.\n     */","name":"comment","type":{"kind":"STRING"}},{"comment":"/**\n     * A map of object models by simple name.\n     */","name":"models","type":{"kind":"MAP","mapKey":{"kind":"STRING"},"mapValue":{"name":"Model","kind":"DDL"}}}]},"Type":{"comment":"/**\n   * A specific Kind and parameterization thereof.\n   */","name":"Type","properties":[{"name":"name","type":{"kind":"STRING"}},{"name":"kind","type":{"name":"Kind","kind":"ENUM"}},{"name":"listElement","type":{"name":"Type","kind":"DDL"}},{"name":"mapKey","type":{"name":"Type","kind":"DDL"}},{"name":"mapValue","type":{"name":"Type","kind":"DDL"}}]}}}